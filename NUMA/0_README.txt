NUMA (non-uniform memory access) is a method of configuring a cluster of microprocessor in a multiprocessing system so that they can share memory (read cache) locally within that cluster, improving performance and the ability of the system to be expanded (scaled). 

NUMA is used in a symmetric multiprocessing ( SMP ) system. An SMP system is a "tightly-coupled," "share everything" system in which multiple processors working under a single operating system and access each other's memory (cache) over a common bus or "interconnect" path. Ordinarily, a limitation of SMP is that as microprocessors are added, the shared bus or data path get overloaded and becomes a performance bottleneck. NUMA adds an intermediate level of memory shared among a few microprocessors (these few microprocessors form what we call a NUMA node) so that all data accesses don't have to travel on the main bus.

Think like there are 4 people in the 4 corner in a room and everyone needs to walk down a common path to xfer something to another person. Now if we increase the people from 4 to 8, this path actually becomes more and more used/crowded or becomes a bottlneck. So the people here are actually nodes and the path is the data path. So with NUMA, a group of processors share a cache, so that only data that needs to be accessed across a node needs to travel on the common path.
