<!-- Very simple schema. You have one complex type employee in HR namespace. It can have two attributes: name and ID.
     The employee element can have 0-12 nested elements called "manages" which itself are of type employee. This means that "manages" element itself can take two attributes name and ID and can have more nested manages attributes. We will generate XML data bindings using wsdl2h utility provided by gSOAP.
     wsdl2h -o hr.h hr.xsd

View hr.h next
Note that hr.h looks like C/C++ file, but it is not. It is an XML data binding file generated by gSOAP.

After you have the XML data binding generated, you can generate the data binding implementation code using gSOAP. Example: getters(), setters(), serialization(), deserialization() etc. This is done using another utility that soap provides: soapcpp2 -c++11 hr.h
I saw four files getting generated:
soapH.h
soapC.h
soapStub.h
ns1.nsmap
-->

<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="HR" xmlns:tns="HR">
  <complexType name="employee">
    <sequence>
      <element name="manages" type="tns:employee" minOccurs="0" maxOccurs="12"/>
    </sequence>
    <attribute name="name" type="string"/>
    <attribute name="ID" type="int" use="default" default="9999"/>
  </complexType>
  <element name="employee" type="tns:employee"/>
</schema>

<!-- please read 2_Must_Read.txt -->
