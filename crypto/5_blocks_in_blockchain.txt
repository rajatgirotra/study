SHA256 is just a deterministic one way hash function which always produces a random 256 bit output.
It stands for Secure Hash Algorithm

Determinitic --> means that for the same input, the output is always the same.
One way means --> Once you get the 256 bit digest, there is no way to get to the original input

It also has this butterfly effect which means even if you change 1 bit in the input, the 256 bit output will be really different.

https://demoblockchain.org/hash

Blocks in a Blockchain
=======================
blocks in a blockchain have
1) A block number
2) A Nonce (i.e. Number once used)
3) The data.
These three together as input to an SHA256 algo should give a HASH with four leading zeros.

https://demoblockchain.org/block --> go here and check it out

To see how blocks in a blockchain are tied together see this link.
https://demoblockchain.org/blockchain

You will notice that each block is cryptographically tied to the block before it.
Every block has a
1) Block number
2) A Nonce(actually called the proof of work)
3) Data (ie bitcoin transactions)
4) PrevHash (Hash of the previous block)
All these 4 combined create the next block. If you change any of 1-4), you will break the block and all the blocks infront of it. i.e. you break the whole blockchain.

You will notice that each block has a Hash which has 4 leading zero's. That's called the difficulty level. The difficulty level tells you how difficult is it for you to get/compute a hash for your block given the block number, data and prev hash. you have to adjust the Nonce to get a hash with 4 leading zeros. The difficulty level is closely tied to security. As more computing power is added by the bitcoin mining community, the difficulty level is revised. The difficulty level is kept such that it takes about 10 minutes to mine a new block (i.e. find the nonce).

How does that provide security? Lets say your block chain has 6 blocks and you tamper with block 2.
This means all of blocks 2-6 are invalid and you need to mine it. i.e find the correct Nonce for blocks 2-6 one by one.
If it takes 10 mins to mine one block, you need 10*5 = 50 mins to create a new modified blockchain.
Also since there are several copies of the blockchain blocks across multiple servers, the faked blockchain top of the hash will not match to the hash of the remaining nodes. so blockchain code will reject it.

go to BTC.com to see the latest bitcoin blockchain
You can see the blocks in a blockchain and details about each block like
1) who mined it
2) what was the reward
3) block number
4) when was it mined
5) the number of transactions in that block etc.

If you see the transactions in any block, the first transaction is the "Coinbase" transaction which is the reward transaction for that miner + some extra bitcoins corresponding to all the transaction fees for all the transactions in that block. Later we will see what is transaction fees.

As of March 9' 2022, the most recent block number is 726529 with block hash: 00000000000000000007b30042c927668008a0c3ff61389c3a242bf6e74ef869, ie 19 leading zeros

Byzantine Generals Problem
===========================
How does Blockchain save itself from attackers.

1) One thing you already know that if an attacker tries to modify an old block, he/she will need to recompute the nonce for all the subsequent blocks. However this takes time and since all the full nodes are connected to each other, the rest of the full nodes will ask Blockchain on the attackers full node to fix itself. So even before the attacker recomputes the blocks, the other full nodes will fix it.

Lets now see what is the Byzantine Generals Problem.
So there are 4 generals on horses who want to capture a castle. They can only succeed if they all attack or retreat at the same time. Otherwise if there is chaos, they will never win. One out of the 4 generals is a traitor. So what protocol should the generals use to arrive at a consensus to overtake the castle. One out of the 4 generals will give a command and the others must decide what to do. The general who gives the command could be a traitor too.

The protocol is that each general will listen to the order and relay that same order to every other general. Each general will see how many requests for attack or retreat they get and they go with the higher of that.

Case where general is not a traitor
===================================
1) Gen1 issues order to attack.
2) Gen2 is traitor and relays order to retreat to Gen1, Gen3, Gen4
Scenario
Gen1) receives order to attack from Gen3) and Gen4) and retreat from Gen2)
Gen2) receives order to attack from Gen1) and Gen3) and Gen4)
Gen3) receives order to attack from Gen1) and Gen4) and retreat from Gen2)
Gen4) receives order to attack from Gen1) and Gen3) and retreat from Gen2)
So they all attack.

Even when Gen1) is traitor and gives confusing order, i.e. Attack order to Gen2) and Retreat order to Gen3) and Gen4).
They will still arrive at a consensus. This mathematical proof shows that if there is a rouge full node, it will still not effect the blockchain. BUT ONLY IF THE ATTACKERS ARE LESS THAN 1/3rd. If for this problem we have 2 Traitors, ie 1/2, they will never be able to arrive at a consensus.

Blockchain however uses a different consensus protocol which is more fool proof and requires atleast more than 50% of attackers on the network. The case we discuss below is valid in both cases.

1) An attacker tries to put fake transactions in a block and tries to put it in the blockchain.
2) Two miners submit a successfully mined block at the same time.
Let's say there are 6 full nodes and node 1 and node 6 mine a block (node 1 mines Orange color block and node 6 mines purple color block) at the same time. The block will be sent to other full nodes. Lets say nodes 2, 3, 4 get the orange block and node 5 gets the purple block. Both the blocks are valid. So what will happen now, is that the blockchain will now wait for another block to be mined and sent out to other nodes. Lets say node 3 mines an orange block and sends it to node 1, node 2 and node 4.
so node 1, 2, 3, 4 all have two orange blocks and node 5 and 6 have only 1 purple block. So the 2 orange blocks are accepted (as it is a longer chain) and node 5 and node 6 have to accept it. the purple block now becomes an orphaned block.

